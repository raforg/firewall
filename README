README
~~~~~~
firewall - Linux-2.2 ipchains (packet filtering) firewall administration

This contains scripts that manage an ipchains (packet filtering) firewall.
All you have to do is edit the policy file as per your requirements.

Policies are specified by editing the policy file to specify trusted and
untrusted network interfaces, the services you wish to permit, and the
external hosts which may take part in these services.

This supports up to 10 untrusted interfaces, each with a distinct policy
(Although all aliases on a single untrusted interface are treated equally).
There can be as much or as little sharing of policy between untrusted
interfaces as you like.

There is primitive support for IP masquerading. Masqueraded hosts can engage
in permitted outgoing services (except OSPF, DHCP, PPTP and IPSEC) exactly
like the current host and are bound by the same restrictions. Distinct policies
for internal hosts isn't implemented until the next release. Then comes NAPT
support.

The policy is specified in the firewall.policy file.

Read it carefully.

Here is the list of currently supported services:

    icdns   - incoming Client DNS
    ocdns   - outgoing Client DNS
    isdns   - incoming Server DNS
    osdns   - outgoing Server DNS
    ismtp   - incoming SMTP
    osmtp   - outgoing SMTP
    ipop    - incoming POP
    opop    - outgoing POP
    iimap   - incoming IMAP
    oimap   - outgoing IMAP
    ispop   - incoming SSL-POP
    ospop   - outgoing SSL-POP
    isimap  - incoming SSL-IMAP
    osimap  - outgoing SSL-IMAP
    isldap  - incoming SSL-LDAP
    osldap  - outgoing SSL-LDAP
    issh1   - incoming SSH1
    ossh1   - outgoing SSH1
    issh2   - incoming SSH2
    ossh2   - outgoing SSH2
    inftp   - incoming FTP (normal mode)
    ipftp   - incoming FTP (passive mode)
    onftp   - outgoing FTP (normal mode)
    opftp   - outgoing FTP (passive mode)
    iteln   - incoming TELNET
    oteln   - outgoing TELNET
    ihttp   - incoming HTTP
    ohttp   - outgoing HTTP
    ihttps  - incoming HTTPS
    ohttps  - outgoing HTTPS
    iproxy  - incoming HTTP PROXY
    oproxy  - outgoing HTTP PROXY
    inntp   - incoming NNTP
    onntp   - outgoing NNTP
    irsync  - incoming RSYNC
    orsync  - outgoing RSYNC
    icvs    - incoming CVS
    ocvs    - outgoing CVS
    ignats  - incoming GNATS
    ognats  - outgoing GNATS
    imysql  - incoming MYSQL
    omysql  - outgoing MYSQL
    ismb    - incoming SMB
    osmb    - outgoing SMB
    iirc    - incoming IRC
    oirc    - outgoing IRC
    iicq    - incoming ICQ
    oicq    - outgoing ICQ
    ireal   - incoming RealAudio/QuickTime
    oreal   - outgoing RealAudio/QuickTime
    intp    - incoming NTP
    ontp    - outgoing NTP
    igoph   - incoming GOPHER
    ogoph   - outgoing GOPHER
    iwais   - incoming WAIS
    owais   - outgoing WAIS
    oarch   - outgoing ARCHIE
    ifing   - incoming FINGER
    ofing   - outgoing FINGER
    owhois  - outgoing WHOIS
    iauth   - incoming AUTH
    oauth   - outgoing AUTH
    ilog    - incoming SYSLOG
    olog    - outgoing SYSLOG
    sdhcp   - DHCP Server
    cdhcp   - DHCP Client
    isnmp   - incoming SNMP
    osnmp   - outgoing SNMP
    isnmpt  - incoming SNMP TRAP
    osnmpt  - outgoing SNMP TRAP
    ibgp    - incoming BGP
    obgp    - outgoing BGP
    ospf    - OSPF
    irip    - incoming RIP
    orip    - outgoing RIP
    ikerb   - incoming KERBEROS
    okerb   - outgoing KERBEROS
    ipptp   - incoming PPTP
    opptp   - outgoing PPTP
    iipsec  - incoming IPSEC
    oipsec  - outgoing IPSEC
    iping   - incoming PING
    oping   - outgoing PING
    itrace  - incoming TRACEROUTE
    otrace  - outgoing TRACEROUTE

INSTALL
~~~~~~~
This was written for a Redhat 6.0 Linux 2.2 system. The Makefile assumes a
Redhat 6.0 /etc layout (so you might have to edit the Makefile or install
manually). Everything else requires ipchains which is a Linux-2.2 feature.

Install (as root):

    tar xzf firewall-20000402.tar.gz
    cd firewall-20000402
    make install

Edit the sample policy file to reflect your filtering policy and install it:

    vi firewall.policy
    make policy

Start/test the firewall (before untrusted interfaces are brought up):

    /etc/rc.d/init.d/firewall start

For more details:

    make help

Note: Don't trust it. Test it. Many services haven't been tested yet.
Please send success reports, bug reports, criticism, comments, suggestions,
patches, pointers to more information, ...

After setting up a firewall, don't forget to run port scanners (e.g. nmap) on
your untrusted interfaces (as root from the inside and the outside) to make
sure that you got what you wanted. If there are any surprises, investigate.

If your untrusted interface(s) change IP address, reload the firewall in a
script that executes as soon as each new IP address is established (e.g.
/etc/ppp/ip-up.local or /etc/dhcp/*).

COPYING
~~~~~~~
firewall - Linux-2.2 ipchains (packet filtering) firewall administration
Copyright (C) 1999, 2000 raf <raf2@zip.com.au>

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
    or visit http://www.gnu.org/copyleft/gpl.html

HISTORY
~~~~~~~
19991231

    - Initial version

20000309

    - Incorporated linux-firewall-tools.com:
      - Added more protection against spoofing and dangerous services
      - Added more kernel protection (source routing, redirects, syn cookie,
        defrag, icmp broadcast echo, bogus error response, martian logging)
      - Added services (DHCP, HTTPS, HTTP PROXY, IMAP, ICQ, Real Audio)
      - Changed default forward policy from deny to reject
      - Added "untrusted networks"
      - Added configuration of masquerade timeouts
    - Split SSH into SSH1 and SSH2
    - Added BGP and RSYNC
    - Fixed DNS policy variables and doco
    - Cleaned up, fixed bugs
    - Modified fwup to run on non redhat systems
    - Added "make decent"
    - Started logging incoming ping and traceroute even if accepted
    - IP forwarding only started/stopped if masquerading requested
    - Started denying/rejecting fragments (kernel must always defrag)
    - Started using local and masqueraded port ranges (from Mike A. Harris)
    - Added SMB, PPTP and IPSEC (from Yan Seiner)
    - Added support for multiple untrusted interfaces with differing policies
    - Added automatic identification of local networks

20000321

    - Added dynamic IP address hacking in IP MASQ (for non-routers only!)
    - Added the ability to deny/reject selected ports without logging them
    - Added Kerberos, CVS, GNATS, MySql, SSL-POP, SSL-IMAP, SSL-LDAP, OSPF
    - Fixed bug: was masquerading traffic between multiple internal networks
    - Added the dns2ip utility to translate domain names in policy files into ip addresses

20000402

    - Shortened/cleaned up fwup a bit with more functions
    - Fixed bug: SSH1 rules were allowing SSH2 as well
    - Fixed doco: outgoing SSH2 note was stupid
    - Fixed bug: SDNS rules were allowing CDNS as well
    - Fixed bug: masqueraded UDP (e.g. CDNS!) failed (func vars weren't local)
    - Fixed bug: SNMP[T] rules from Chapman & Zwicky disagreed with RFC 1157
    - Fixed bug: typo in DHCP Client rules allowed incoming address updates even when $DHCP_SERVERS is empty
    - Added the ability to specify more simple tcp services in the policy file

REFERENCES
~~~~~~~~~~
Building Internet Firewalls by Chapman & Zwicky
IPCHAINS-HOWTO by Paul Russell
http://linux-firewall-tools.com by Robert L. Ziegler
The ipchains mailing list. Particularly Yan Seiner and Mike A. Harris
IP-Masquerade-HOWTO by David Ranch
IP Command Reference by Alexey N. Kuznetsov
Various RFCs

BUGS
~~~~
- More chains and rules are created than is absolutely necessary.
  This wastes time during firewall creation but they are not used
  and should have no effect on packet filtering speed.

- There is no normal forwarding or NAPT support yet.

TODO
~~~~
More testing
Normal forwarding, sets of internal IP addresses, each with their own policy
Network Address/Port Translation
Improve fwhelper

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
URL: http://www.zip.com.au/~raf2/lib/software/firewall
Date: 20000402
Author: raf <raf2@zip.com.au>

