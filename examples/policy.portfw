#
# firewall: http://www.zip.com.au/~raf2/lib/software/firewall
#
# Copyright (C) 1999, 2000 raf <raf2@zip.com.au>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# or visit http://www.gnu.org/copyleft/gpl.html
#

# name: /etc/firewall.policy
#
# This file tells fwup who and what to trust or not.
#
# Read it carefully.
#
# 20000421 raf <raf2@zip.com.au>

##############################################################################
# About the policy file
#
# The policy file is composed of sections in which you need to specify much
# information: this host's trusted and untrusted network interfaces; this
# host's role and function within the network topology; and the incoming and
# outgoing services to allow and the internal and external hosts that may
# take part in them. It has been designed so as to make this as painless and
# flexible as possible.
#
# Each section contains detailed explanations and advice on things such as
# when to start the firewall and the security implications of various well
# known internet services and advice on how to allow them safely. It is
# intended to introduce administrators to some subtleties of packet
# filtering quickly so that they can make better informed security decisions
# and achieve and maintain effective network security (at least the packet
# filtering part) in a very short time. Of course, it will not prevent you
# from achieving bad network security, but you will have been warned :)
#
# Each section also contains commented out variables that can be uncommented
# and possibly edited to supply policy information to fwup. Some of them
# show the default values used by fwup. Others are choices. Others still are
# just examples. Hopefully it's clear which is which. Each policy variable
# is explained when encountered.
#

##############################################################################
# Network Interfaces
#
# Note: If the firewall is started when an interface is down, the rules
# created for that interface will use 0/0 as it's address. If it is started
# when the interface is up, it's real, current address(es) will be used.
# However, starting the firewall after an untrusted interface is up creates
# a window of opportunity in which an attacker might crash the system (I
# doubt that there'd be enough time for anything sophisticated but I could
# easily be wrong). The easiest way to eliminate the possibility is to start
# the firewall at boot time both before and after the network interfaces are
# brought up. If this host receives dynamic IP addresses (e.g. via PPP or
# DHCP), reload the firewall after receiving each new address as well (e.g.
# in /etc/ppp/ip-up.local or /etc/dhcp/*). You can't specify permanent
# addresses in the policy file because they can be and are determined by
# fwup so you don't have to. I like this, YMMV.
#
# Note: All addresses/aliases on an interface are treated equally. This is
# justified by the fact that it is the interface that is trusted or
# untrusted, not one of it's addresses. The real reason, however, is that
# differentiating between aliases isn't well supported and it's only needed
# for M:N NAPT. Currently, fwup only supports M:1 NAPT (masquerading and port
# forwarding). The next release will also support M:N NAPT.

# Packets on trusted interfaces will be accepted (e.g. eth0 lo)
TRUSTED_INTERFACES="eth0 lo"

# Packets on untrusted interfaces will be filtered (e.g. ppp0)
UNTRUSTED_INTERFACES="ppp0"

# Identify the internal networks for use in spoof protection and masquerading.
# Note: By default, fwup will use the addresses and network masks of the
# trusted interfaces (except lo), including those of any aliases. This only
# works if the trusted interfaces are up. If the firewall is to be started
# before the trusted interfaces are up, identify the internal networks
# explicitly. You also need to identify internal networks explicitly if
# masquerading and there are multiple untrusted interfaces, otherwise, fwup
# will masquerade packets forwarded across internal, untrusted interfaces.
INTERNAL_NETWORKS="10.0.0.0/24"

# State which untrusted interfaces are connected to internal networks. This
# prevents spoof protection from occurring on that interface. Otherwise,
# private IP addresses would be blocked on internal interfaces.
# INTERNAL_UNTRUSTED_INTERFACES=""

##############################################################################
# Network Topology
#
# Various network topologies are supported: standalone host, forwarding
# host, simple masquerading host, simple port forwarding/masquerading host,
# alias masquerading host (not implemented yet) and static NAT host (not
# implemented yet). The following sections specify and configure this host's
# role in the network topology.
#
# Topology           Required Variables
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Standalone
# Forwarding         FORWARDING="yes"
# Masquerading       MASQUERADING="yes"
# Port Forwarding    PORT_FORWARDING="yes" (implies MASQUERADING="yes")
# Alias Masquerading ALIAS_MASQUERADING="yes" (implies PORT_FORWARDING="yes")
# Static NAT         STATIC_NAT="yes"
#

##############################################################################
# Standalone
#
# This is for a single host that connects to an external network.
#

##############################################################################
# Forwarding
#
# This is for a host that performs normal routing between internal and
# external networks.
#
# Note: This is a good place to define TARGET variables (see Service Policy).
#

# FORWARDING="no"

##############################################################################
# Masquerading (outgoing M:1 NAT)
#
# This is for a host that needs to masquerade internal networks behind the
# single IP address by which it is known to an external network.
#
# Note: Masquerading is only supported across one untrusted interface. If
# there are multiple untrusted interfaces, the masquerading interface is the
# one that appears first in $UNTRUSTED_INTERFACES.
#
# Note: Allowing outgoing services (with some exceptions) applies not only
# to this host but also to all masqueraded hosts. If you need to restrict
# certain internal, masqueraded hosts from using a particular incoming or
# outgoing service, allow the service across the external interface, make
# the internal network interface(s) untrusted, then disallow the service
# to or from specific hosts across the internal interface.

# MASQUERADING="no"

# Timeouts used for masquerading (zero means leave timeout as it is)
# Timeout in seconds for masqueraded tcp addresses
# MASQ_TCP_TIMEOUT="0"
# Timeout in seconds for masqueraded tcp addresses after receiving FIN
# MASQ_TCPFIN_TIMEOUT="0"
# Timeout in seconds for masqueraded udp addresses
# MASQ_UDP_TIMEOUT="0"

# Masquerading modules that need to be loaded. They will only be loaded once.
#
# Note: fwup doesn't contain rules for cuseeme, quake or vdolive so loading
# the corresponding modules would be pointless. If you need them, add the
# rules to fwup and please send me the patch.

# MASQ_MODULES=""
# MASQ_MODULES="$MASQ_MODULES cuseeme"
# MASQ_MODULES="$MASQ_MODULES ftp"
# MASQ_MODULES="$MASQ_MODULES irc"
# MASQ_MODULES="$MASQ_MODULES quake"
# MASQ_MODULES_quake="26000,27000,27910,27960"
# MASQ_MODULES="$MASQ_MODULES raudio"
# MASQ_MODULES="$MASQ_MODULES user"
# MASQ_MODULES="$MASQ_MODULES vdolive"

##############################################################################
# Port Forwarding (incoming and outgoing M:1 NAPT)
#
# This is for a host that needs to masquerade internal networks behind the
# single IP address by which it is known to an external network and to
# forward incoming connections to certain ports at that address to internal
# hosts.
#
# Note: Requires ipmasqadm. Implies MASQUERADING="yes".
#

PORT_FORWARDING="yes"

# Specify (protocol, dstport, toaddr, toport) tuples where protocol and
# dstport identify the destination an incoming packet (the destination
# address is implicitly that of the external interface) and toaddr and
# toport specify the internal address and port to which the packet is to be
# forwarded.

PORTFW=""
PORTFW="$PORTFW tcp 80 10.0.0.2 80"   # http
PORTFW="$PORTFW tcp 443 10.0.0.2 443" # https
PORTFW="$PORTFW tcp 25 10.0.0.3 25"   # smtp
PORTFW="$PORTFW tcp 22 10.0.0.4 22"   # ssh

##############################################################################
# Alias Masquerading (incoming and outgoing M:N NAPT)
#
# This is for a host that needs to translate between real IP addresses by
# which it is known to an external network (aliased to a single network
# interface) and private IP addresses used by internal networks.
#
# Note: Requires iproute2. Implies PORT_FORWARDING="yes".
# Note: Not yet implemented.
#

# ALIAS_MASQUERADING="no"

# Specify (protocol, dstaddr, dstport, toaddr, toport) tuples where
# protocol, dstaddr and dstport identify the destination of an incoming
# packet and toaddr and toport specify the internal address and port to
# which the packet is to be forwarded. dstaddr must be one of the
# addresses/aliases of the external interface.

# NAPT=""
# e.g. NAPT="$NAPT tcp 222.222.222.222 80 10.0.0.1 80"

##############################################################################
# Static NAT (incoming and outgoing 1:1 NAT)
#
# This is for a host that needs to perform static network address translation.
#
# Note: Requires iproute2.
# Note: Not yet implemented.
#

# STATIC_NAT="no"

# Specify (fromaddr, toaddr) tuples where fromaddr is the address to be
# translated and toaddr is the address into which fromaddr is to be
# translated.

# NAT=""
# e.g. NAT="$NAT 222.222.222.222 10.0.0.1"

##############################################################################
# Configure other kernel supplied protection
#
# Note: These should all be left alone unless your kernel doesn't support
# something and you're sick of seeing the corresponding failure messages. A
# better alternative, though, is to upgrade or reconfigure your kernel.
#

# IPV4_SPOOF_PROTECT="yes"
# IPV4_SOURCE_ROUTE_PROTECT="yes"
# IPV4_ICMP_REDIRECT_PROTECT="yes"
# IPV4_TCP_SYN_COOKIE_PROTECT="yes"
# IPV4_FRAGMENT_PROTECT="yes"
# IPV4_ICMP_BROADCAST_ECHO_PROTECT="yes"
# IPV4_BOGUS_ERROR_RESPONSE_PROTECT="yes"
# IPV4_LOG_MARTIANS="yes"

# Turn this on if you receive dynamic IP addresses from PPP or DHCP but only
# if this is not a multi-homed host or router. It tells the kernel to fix
# the source address of your packets if some software got it wrong by using
# a previous address, say. This sort of behaviour can break a router.
# IPV4_DYNADDR="no"

##############################################################################
# Paranoia
#

# Disallow all packets between this network and untrusted networks
# Note: This is not particularly useful. If it's really hostile, they can
# spoof some other network's addresses anyway. In fact, they may have been
# doing so all along.
# UNTRUSTED_NETWORKS=""

# Range of X Window server ports to avoid like the plague
# XWIN_PORTS="6000:6063"

# List of hosts that are allowed to connect to this host's X server.
# Note: Don't use this.
# Blank means no hosts.
# XWIN_CLIENTS=""

# List of other tcp ports to avoid like the plague (NFS, SOCKS, OpenWindows)
# Note: You'll have to remove 2000 from here for incoming ICQ but don't do that.
# EVIL_TCP_PORTS="2049 1080 2000"

# Log all denied/rejected packets
# Note: See below for blocking selected packets without logging them.
# LOG="yes"

# Set the blocking policies
# Note: Some people prefer DENY for the input blocking policy because it makes
# port scans take much longer (like a steering lock on a car). Others prefer
# REJECT because it makes your network look dumb and hence less attractive to
# attackers (ports look closed rather than filtered).

# BLOCKIN="DENY"
# BLOCKOUT="REJECT"
# BLOCKFWD="REJECT"

##############################################################################
# Service Policy
#
# Note: Services added to the "SERVICES" variable (below) will be permitted
# on all interfaces listed in "UNTRUSTED_INTERFACES". This allows multiple,
# untrusted interfaces to share the same policy. If you need each untrusted
# interface to maintain unique policies, add services to the "SERVICES_#"
# variables, where "#" is the number corresponding the relevant interface's
# position within "UNTRUSTED_INTERFACES" (from 0 to 9). The same naming
# scheme and semantics apply to the "*_SERVERS" and "*_CLIENTS" variables.
# You can use any combination of numbered variables and their corresponding
# un-numbered variables. The un-numbered variables will be used for all
# untrusted interfaces. The numbered variables will only be used for their
# corresponding interface.
#
# Note: The SERVICES variables contain words of the form: service[.target]
# (e.g. ihhtp.www) where service is the name of a supported service and target
# refers to the value of a target variable (e.g. TARGET_www) which contains
# a set of IP addresses for whichthe service is to be allowed. If the target
# is omitted from a SERVICES variable, the service will be allowed for the
# IP addresses of the corresponding untrusted interface. Target names must
# not be the same as any service name.
#

##############################################################################
# Incoming Client DNS
#
# Note: This is needed when this host runs a registered DNS server that can
# be accessed by external hosts (resolvers or BIND 8 servers without
# "query-source port 53"). For a bastion DNS slave server host, give access
# to all hosts. For an internal DNS master server host, give access to the
# bastion DNS server host for zone transfers if it runs BIND 8 without
# "query-source port 53". However, it would be better for the bastion DNS
# slave server to "query-source port 53" so that only incoming Server DNS
# from the bastion host is required for this host.
#
# Open: tcp/53, udp/53

# SERVICES="$SERVICES icdns"

# List of hosts which may connect to this host's DNS server.
# Blank means all hosts.
# ICDNS_CLIENTS=""

##############################################################################
# Outgoing Client DNS
#
# Note: Don't use this. It leaves too many udp ports open.
# Note: This is needed when this host's resolver queries external DNS
# servers. This is also needed even when the resolver queries the local DNS
# server if that server is BIND 8 without "query-source port 53". If the
# resolver only queries the local DNS server which has been configured with
# "query-source port 53", only outgoing Server DNS is required for this
# host.
#
# Open: tcp(ack)/1024-4999,61000-65096 udp/1024-4999,61000-65096

# SERVICES="$SERVICES ocdns"

# List of DNS servers to which this network may connect.
# Blank means no hosts.
# OCDNS_SERVERS="`awk '/^nameserver/ { if ($2 != "127.0.0.1") { printf "%s/32\n", $2 } }' /etc/resolv.conf`"

##############################################################################
# Incoming Server DNS
#
# Note: This is only needed when this host runs a registered DNS server that
# can be accessed by external DNS servers (BIND 4 servers and BIND 8 servers
# with "query-source port 53"). For a bastion DNS slave server host, give
# access to all hosts. For an internal DNS master server host, give access
# to the bastion DNS slave server host for zone transfers if it runs BIND 4
# or BIND 8 with "query-source port 53".
#
# Open: tcp/53 udp/53

# SERVICES="$SERVICES isdns"

# List of DNS server hosts which may connect to this host's DNS server.
# Blank means all hosts.
# ISDNS_CLIENTS=""

##############################################################################
# Outgoing Server DNS
#
# Note: This is needed when this host runs a DNS server (BIND 4 or BIND 8
# with "query-source port 53") that queries external DNS servers. For an
# internal host, forward all queries to a bastion (or your ISP's) DNS server
# and give access to only those servers. For a bastion DNS server host, give
# access to all hosts.
#
# Open: tcp(ack)/53,61000-65096 udp/53,61000-65096

SERVICES="$SERVICES osdns"

# List of DNS server hosts to which this networks DNS servers may connect.
# Blank means no hosts.
OSDNS_SERVERS="222.222.222.2/32 222.222.223.3/32"

##############################################################################
# Incoming SMTP
#
# Note: If this is a bastion host, run smap and permit all hosts to connect.
# Otherwise, run smap and only permit connections from the bastion host.
#
# Open: tcp/25

SERVICES="$SERVICES ismtp" # This will be port forwarded to 10.0.0.3:25

# List of hosts which may connect to this host's SMTP server.
# Blank means all hosts.
# SMTP_CLIENTS=""

##############################################################################
# Outgoing SMTP
#
# Note: If this host is a bastion, permit connections to all hosts,
# otherwise only permit connections to the bastion host.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES osmtp"

# List of SMTP servers to which this network may connect.
# Blank means all hosts.
SMTP_SERVERS="222.222.222.3/32"

##############################################################################
# Incoming POP
#
# Note: This is an extremely bad idea since real user names and passwords
# and private mail will be transmitted over the net in plaintext. Use
# SSL-POP instead.
#
# Open: tcp/109-110

# SERVICES="$SERVICES ipop"

# List of hosts which may connect to this host's POP server.
# Blank means all hosts.
# POP_CLIENTS=""

##############################################################################
# Outgoing POP
#
# Note: This is an extremely bad idea when the user name and password or
# people's private mail are too sensitive to be transmitted over the net in
# plaintext. Use $EVIL_POP_SERVERS to deny such uses while allowing less
# sensitive POP access. Use SSL-POP instead.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES opop"

# List of POP servers to which this network may not connect (to prevent
# plaintext password transmission).
# Blank means no hosts.
# EVIL_POP_SERVERS=""

# List of POP servers to which this network may connect.
# Blank means all hosts.
# POP_SERVERS=""

##############################################################################
# Incoming IMAP
#
# Note: This is an extremely bad idea if any external IMAP clients or
# internal IMAP servers don't support and use the "AUTHENTICATE" command
# instead of the "LOGIN" command since user names, passwords and people's
# private mail will be transmitted over the net in plaintext. Use SSL-IMAP
# instead.
#
# Open: tcp/143

# SERVICES="$SERVICES iimap"

# List of hosts which may connect to this host's IMAP server.
# Blank means all hosts.
# IMAP_CLIENTS=""

##############################################################################
# Outgoing IMAP
#
# Note: This is an extremely bad idea if any internal IMAP clients or
# external IMAP servers don't support and use the "AUTHENTICATE" command
# instead of the "LOGIN" command since user names, passwords and people's
# private mail will be transmitted over the net in plaintext. Use
# $EVIL_IMAP_SERVERS to deny such uses while allowing less sensitive IMAP
# access. Use SSL-IMAP instead.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES oimap"

# List of IMAP servers to which this network may not connect (to prevent
# plaintext password transmission).
# Blank means no hosts.
# EVIL_IMAP_SERVERS=""

# List of IMAP servers to which this network may connect.
# Blank means all hosts.
# IMAP_SERVERS=""

##############################################################################
# Incoming LDAP
#
# Note: Don't allow this across a firewall if your ldap server contains
# information that the world at large does not need to see. This should
# probably only be used for public key servers. Otherwise, use SSL-LDAP.
#
# Open: tcp/389

# SERVICES="$SERVICES ildap"

# List of hosts which may connect to this host's LDAP server.
# Blank means all hosts.
# LDAP_CLIENTS=""

##############################################################################
# Outgoing LDAP
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES oldap"

# List of LDAP servers to which this network may connect.
# Blank means all hosts.
# LDAP_SERVERS=""

##############################################################################
# Incoming SSL-POP
#
# Open: tcp/995

# SERVICES="$SERVICES ispop"

# List of hosts which may connect to this host's SSL-POP server.
# Blank means all hosts.
# SPOP_CLIENTS=""

##############################################################################
# Outgoing SSL_POP
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES ospop"

# List of SSL-POP servers to which this network may connect.
# Blank means all hosts.
# SPOP_SERVERS=""

##############################################################################
# Incoming SSL-IMAP
#
# Open: tcp/993

# SERVICES="$SERVICES isimap"

# List of hosts which may connect to this host's SSL-IMAP server.
# Blank means all hosts.
# SIMAP_CLIENTS=""

##############################################################################
# Outgoing SSL-IMAP
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES osimap"

# List of SSL-IMAP servers to which this network may connect.
# Blank means all hosts.
# SIMAP_SERVERS=""

##############################################################################
# Incoming SSL-LDAP
#
# Open: tcp/636

# SERVICES="$SERVICES isldap"

# List of hosts which may connect to this host's SSL-LDAP server.
# Blank means all hosts.
# SLDAP_CLIENTS=""

##############################################################################
# Outgoing SSL-LDAP
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES osldap"

# List of SSL-LDAP servers to which this network may connect.
# Blank means all hosts.
# SLDAP_SERVERS=""

##############################################################################
# Incoming SSH1
#
# Note: Permit this rather than telnet or ftp. You can restrict this to
# specific, trusted hosts.
#
# Open: tcp/22

SERVICES="$SERVICES issh1" # This will be port forwarded to 10.0.0.4:22

# List of hosts which may connect to this host's SSH1 server.
# Blank means all hosts.
# SSH1_CLIENTS=""

##############################################################################
# Outgoing SSH1
#
# Note: Permit this rather than telnet or ftp. You can restrict this to
# specific, trusted hosts.
#
# Open: tcp(ack)/513-1023,61000-65096

SERVICES="$SERVICES ossh1"

# List of SSH1 servers to which this network may connect.
# Blank means all hosts.
# SSH1_SERVERS=""

##############################################################################
# Incoming SSH2/LSH
#
# Note: Permit this rather than telnet or ftp. You can restrict this to
# specific, trusted hosts.
#
# Open: tcp/22

# SERVICES="$SERVICES issh2"

# List of hosts which may connect to this host's SSH2 server.
# Blank means all hosts.
# SSH2_CLIENTS="$ZIPPER"

##############################################################################
# Outgoing SSH2/LSH
#
# Note: Permit this rather than telnet or ftp. You can restrict this to
# specific, trusted hosts.
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES ossh2"

# List of SSH2 servers to which this network may connect.
# Blank means all hosts.
# SSH2_SERVERS="$ZIPPER"

##############################################################################
# Incoming Normal/Passive FTP
#
# Note: This is an extremely bad idea if this host is running a
# non-anonymous FTP server since real user names, passwords and private
# files will be transmitted over the net in plaintext. Use rsync over ssh
# instead. This should only be used on a bastion host running an anonymous
# FTP server.
#
# Also, incoming passive mode ftp is an extremely bad idea since it may
# allow any host to connect to any tcp port above 1023.
#
# Open (normal): tcp/21 tcp(ack)/1024-4999,61000-65096
# Open (passive): tcp/21,1024-4999

# SERVICES="$SERVICES inftp"
# SERVICES="$SERVICES ipftp"

# List of hosts which may connect to this host's FTP server.
# Blank means all hosts.
# FTP_CLIENTS=""

##############################################################################
# Outgoing Normal/Passive FTP
#
# Note: This is an extremely bad idea if used for non-anonymous FTP access
# since real user names, passwords and private files will be transmitted
# over the net in plaintext. Use $EVIL_FTP_SERVERS to deny such uses and
# require that users use rsync over ssh instead.
#
# Also, outgoing normal mode ftp is an extremely bad idea since it allows
# any host to connect to any tcp port above 1023. Instead, restrict
# connections to a bastion host running an FTP proxy.
#
# Open (normal): tcp/1024-4999 tcp(ack)/1024-4999,61000-65096
# Open (passive): tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES onftp"
SERVICES="$SERVICES opftp"

# List of non-anonymous FTP servers to which this network may not connect
# (to prevent plaintext password transmission).
# Blank means no hosts.
# EVIL_FTP_SERVERS=""

# List of FTP servers to which this network may connect.
# Blank means all hosts.
# FTP_SERVERS=""

##############################################################################
# Incoming TELNET
#
# Note: This is an extremely bad idea since real user names, passwords and
# login sessions will be transmitted over the net in plaintext. Require that
# users use ssh instead.
#
# Open: tcp/23

# SERVICES="$SERVICES iteln"

# List of hosts which may connect to this host's TELNET server.
# Blank means no hosts.
# TELNET_CLIENTS=""

##############################################################################
# Outgoing TELNET
#
# Note: This is an extremely bad idea since real user names, passwords and
# login sessions will be transmitted over the net in plaintext. Require that
# users use ssh instead.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES oteln"

# List of TELNET servers to which this network may not connect (to prevent
# plaintext password transmission).
# Blank means no hosts.
# EVIL_TELNET_SERVERS=""

# List of TELNET servers to which this network may connect.
# Blank means all hosts.
# TELNET_SERVERS=""

##############################################################################
# Incoming HTTP
#
# Note: Only run public HTTP servers on bastion hosts.
#
# Open: tcp/80

SERVICES="$SERVICES ihttp" # This will be port forwarded to 10.0.0.2:80

# Allowable HTTP server port numbers for this host.
# Blank means no ports.
# INTERNAL_HTTP_PORTS="80"

##############################################################################
# Outgoing HTTP
#
# Note: You can limit HTTP connections to certain ports on external hosts
# with $EXTERNAL_HTTP_PORTS. By default, this is "80 81 800 8000 8080 8088".
# It is safe to make $EXTERNAL_HTTP_PORTS empty, permitting local clients to
# connect to any port (potentially an HTTP server) on any host and receive
# the responses but you'd be better off using a caching HTTP proxy on a
# bastion host anyway.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES ohttp"

# Allowable port numbers for external HTTP servers (this is stupid, use a proxy).
# Blank means all ports.
# EXTERNAL_HTTP_PORTS="80 81 800 8000 8080 8088"

##############################################################################
# Incoming HTTPS
#
# Note: Only run public HTTPS servers on bastion hosts.
#
# Open: tcp/443

SERVICES="$SERVICES ihttps" # This will be port forwarded to 10.0.0.2:443

# Allowable HTTPS port numbers for this host.
# Blank means no ports.
# INTERNAL_HTTPS_PORTS="443"

##############################################################################
# Outgoing HTTPS
#
# Note: You can limit HTTPS connections to certain ports on external hosts
# with $EXTERNAL_HTTPS_PORTS. By default, this is "443". It is safe to make
# $EXTERNAL_HTTPS_PORTS empty, permitting local clients to connect to any
# port (potentially an HTTPS server) on any host and receive the responses
# but you'd be better off using a caching HTTPS proxy on a bastion host
# anyway.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES ohttps"

# Allowable port numbers for external HTTPS servers (this is stupid, use a proxy)
# Blank means all ports.
# EXTERNAL_HTTPS_PORTS="443"

##############################################################################
# Incoming HTTP PROXY
#
# Note: You need this if your web proxy is internal and it has external
# clients (don't do that), or if this host is a bastion and the interface
# being filtered connects to the internal network.
#
# Open: tcp/8080

# SERVICES="$SERVICES iproxy"

# List of hosts which may connect to this host's web proxy server.
# Blank means no hosts.
# INTERNAL_HTTP_PROXY_CLIENTS=""

# Allowable port numbers for this host's web proxy server.
# Blank means no ports.
# INTERNAL_HTTP_PROXY_PORTS="8080"

##############################################################################
# Outgoing HTTP PROXY
#
# Note: You need this if your HTTP PROXY is running on a bastion host.
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES oproxy"

# List of HTTP PROXY servers to which this network may connect.
# Blank means no hosts.
# EXTERNAL_HTTP_PROXY_SERVERS=""

# Allowable port numbers for external HTTP PROXY servers.
# Blank means all no ports.
# EXTERNAL_HTTP_PROXY_PORTS="8080"

##############################################################################
# Incoming NNTP
#
# Note: Don't run an NNTP server on a bastion host. Run it on an internal
# host and only permit connections from trusted external NNTP servers.
#
# Open: tcp/119

# SERVICES="$SERVICES inntp"

# List of hosts which may connect to this host's NNTP server.
# Blank means no hosts.
# NNTP_CLIENTS=""

##############################################################################
# Outgoing NNTP
#
# Note: Only permit NNTP connections to trusted external NNTP servers.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES onntp"

# List of NNTP servers to which this network may connect.
# Blank means no hosts.
NNTP_SERVERS="222.222.222.4/32"

##############################################################################
# Incoming RSYNC
#
# Note: Don't allow this over a firewall. Use rsync over ssh instead.
#
# Open: tcp/873

# SERVICES="$SERVICES irsync"

# List of hosts which may connect to this host's RSYNC server.
# Blank means no hosts.
# RSYNC_CLIENTS=""

##############################################################################
# Outgoing RSYNC
#
# Note: Don't allow this over a firewall. Use rsync over ssh instead.
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES orsync"

# List of RSYNC servers to which this network may connect.
# Blank means no hosts.
# RSYNC_SERVERS=""

##############################################################################
# Incoming CVS
#
# Note: Don't allow this over a firewall. Use rsync over ssh instead.
#
# Open: tcp/2401

# SERVICES="$SERVICES icvs"

# List of hosts which may connect to this host's CVS server.
# Blank means no hosts.
# CVS_CLIENTS=""

##############################################################################
# Outgoing CVS
#
# Note: Don't allow this over a firewall. Use rsync over ssh instead.
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES ocvs"

# List of CVS servers to which this network may connect.
# Blank means no hosts.
# CVS_SERVERS=""

##############################################################################
# Incoming GNATS
#
# Open: tcp/1529

# SERVICES="$SERVICES ignats"

# List of hosts which may connect to this host's GNATS server.
# Blank means no hosts.
# GNATS_CLIENTS=""

##############################################################################
# Outgoing GNATS
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES ognats"

# List of GNATS servers to which this network may connect.
# Blank means no hosts.
# GNATS_SERVERS=""

##############################################################################
# Incoming MYSQL
#
# Open: tcp/3306

# SERVICES="$SERVICES imysql"

# List of hosts which may connect to this host's MYSQL server.
# Blank means no hosts.
# MYSQL_CLIENTS=""

##############################################################################
# Outgoing MYSQL
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES omysql"

# List of MYSQL servers to which this network may connect.
# Blank means no hosts.
# MYSQL_SERVERS=""

##############################################################################
# Incoming SMB
#
# Note: This is probably a bad idea over a firewall.
#
# Open: tcp/139 udp/137-138

# SERVICES="$SERVICES ismb"

# List of hosts which may connect to this host's SMB server.
# Blank means no hosts.
# SMB_CLIENTS=""

##############################################################################
# Outgoing SMB
#
# Note: This is probably a bad idea over a firewall.
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES osmb"

# List of SMB servers to which this network may connect.
# Blank means no hosts.
# SMB_SERVERS=""

##############################################################################
# Incoming IRC
#
# Note: If this host runs an internal IRC server, make sure it can't
# communicate with external IRC servers or it will attach itself to the IRC
# spanning tree through which this host can be attacked. Also, DCC
# connections between IRC clients isn't supported because it's a very bad
# idea across a firewall.
#
# Open: tcp/6667

# SERVICES="$SERVICES iirc"

# List of hosts which may connect to this host's IRC server.
# Blank means all hosts.
# IRC_CLIENTS=""

##############################################################################
# Outgoing IRC
#
# Note: IRC clients can be dangerous and you shouldn't allow IRC across a
# firewall. It's best to run them on a victim host. Also, DCC connections
# between IRC clients isn't supported because it's a very bad idea across a
# firewall.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES oirc"

# List of IRC servers to which this network may connect.
# Blank means all hosts.
# IRC_SERVERS=""

##############################################################################
# Incoming ICQ
#
# Note: Don't allow this through a firewall. ICQ is dangerous. Run ICQ
# servers on an external victim host.
#
# Open: tcp/2000-4000 udp/4000

# SERVICES="$SERVICES iicq"

# List of hosts which may connect to this host's ICQ server.
# Blank means all hosts.
# ICQ_CLIENTS=""

##############################################################################
# Outgoing ICQ
#
# Note: Don't allow this through a firewall. ICQ is dangerous. Run ICQ
# clients on an external victim host.
#
# Open: tcp(ack)/1024-4999,61000-65096 udp/1024-4999,61000-65096

# SERVICES="$SERVICES oicq"

# List of ICQ servers to which this network may connect.
# Blank means all hosts.
# ICQ_SERVERS=""

##############################################################################
# Incoming RealAudio/QuickTime
#
# Note: Don't allow this through a firewall. You probably don't need it. It's
# a bad idea since it leaves all the udp ports open.
#
# Open: tcp/554,7070-7071 udp/1024-4999

# SERVICES="$SERVICES ireal"

# List of hosts which may connect to this host's RealAudio server.
# Blank means all hosts.
# REALAUDIO_CLIENTS=""

##############################################################################
# Outgoing RealAudio/QuickTime
#
# Note: You may need special kernel modules for this. This is a bad idea
# since it leaves many udp ports open.
#
# Open: tcp(ack)/1024-4999,61000-65096 udp/6970-6999,61000,65096

# SERVICES="$SERVICES oreal"

# List of Realaudio servers that this network may connect to.
# Blank means all hosts.
# REALAUDIO_SERVERS=""

##############################################################################
# Incoming NTP
#
# Note: Only permit this if this host is running a public NTP server. If
# it's an internal host, only permit connections from a proxy NTP server
# running on a bastion host.
#
# Open: udp/123

# SERVICES="$SERVICES intp"

# List of hosts which may connect to this host's NTP server.
# Blank means all hosts.
# NTP_CLIENTS=""

##############################################################################
# Outgoing NTP
#
# Note: Permit this if you synchronize your network from external NTP
# servers. Restrict NTP connections to only those NTP servers.
#
# Open: udp/123,1024-4999,61000-65096

SERVICES="$SERVICES ontp"

# List of NTP servers to which this network may connect.
# Blank means no hosts.
NTP_SERVERS="222.222.222.5/32"

##############################################################################
# Incoming GOPHER
#
# Note: Don't use this. It's for GOPHER servers. I'm just being silly. If
# you must run a public GOPHER server, run it on a bastion host.
#
# Open: tcp/70

# SERVICES="$SERVICES igoph"

# Allowable GOPHER server port numbers for this host.
# Blank means no ports.
# INTERNAL_GOPHER_PORTS="70"

##############################################################################
# Outgoing GOPHER
#
# Note: Don't use this. Use an HTTP-GOPHER gateway.
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES ogoph"

# Allowable port numbers for external GOPHER servers (this is stupid, use a proxy).
# Blank means all ports.
# EXTERNAL_GOPHER_PORTS="70"

##############################################################################
# Incoming WAIS
#
# Note: Don't use this. It's for WAIS servers. I'm just being silly. If you
# must run a public WAIS server, run it on a bastion host.
#
# Open: tcp/210

# SERVICES="$SERVICES iwais"

# Allowable WAIS server port numbers for this host.
# Blank means no ports.
# INTERNAL_WAIS_PORTS="210"

##############################################################################
# Outgoing WAIS
#
# Note: Don't use this. Use an HTTP-WAIS gateway instead.
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES owais"

# Allowable port numbers for external WAIS servers (this is stupid, use a proxy).
# Blank means all ports.
# EXTERNAL_WAIS_PORTS="210"

##############################################################################
# Outgoing ARCHIE
#
# Note: Don't use this. Use an HTTP-ARCHIE gateway instead. If you must
# permit this, restrict it to the well known ARCHIE servers.
#
# Open: udp/1024-4999,61000-65096

# SERVICES="$SERVICES oarch"

# List of ARCHIE servers to which this network may connect.
# Blank means no hosts.
# ARCHIE_SERVERS=""

# These are the archie servers I found that seem to be operational
# ARCHIE_SERVERS="193.63.255.1 195.139.251.51 130.54.23.62 213.188.8.51 140.115.1.72 130.206.1.5 165.230.4.73 195.176.255.9 140.111.1.10 213.188.8.51 203.178.136.180"
# These are their names (for dns2ip when the above IP addresses go stale)
# ARCHIE_SERVERS="archie.doc.ic.ac.uk archie.funet.fi archie.kuis.kyoto-u.ac.jp archie.luth.se archie.ncu.edu.tw archie.rediris.es archie.rutgers.edu archie.switch.ch archie.twnic.net archie.uninett.no archie.wide.ad.jp"

##############################################################################
# Incoming FINGER
#
# Note: Only run a public (secure) FINGER server on a bastion host.
#
# Open: tcp/79

# SERVICES="$SERVICES ifing"

# List of hosts which may connect to this host's FINGER server.
# Blank means all hosts.
# FINGER_CLIENTS=""

##############################################################################
# Outgoing FINGER
#
# Note: Make sure this host's finger clients can handle non-printable
# characters in FINGER output otherwise programmable terminals may get
# themselves reprogrammed.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES ofing"

# List of FINGER servers to which this network may connect.
# Blank means all hosts.
# FINGER_SERVERS=""

##############################################################################
# Outgoing WHOIS
#
# Note: Restrict WHOIS connections to the well known WHOIS servers.
# Do not run a WHOIS server.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES owhois"

# List of WHOIS servers to which this network may connect.
# Blank means all hosts.
# WHOIS_SERVERS=""

##############################################################################
# Incoming AUTH
#
# Note: Permitting this speeds up outgoing SMTP and FTP communications since
# some SMTP and FTP servers attempt to identify their clients. However,
# handing out local user names to anonymous FTP servers is not necessarily a
# good idea. See man identd for details.
#
# Open: tcp/113

SERVICES="$SERVICES iauth"

# List of hosts which may connect to this host's AUTH server.
# Blank means all hosts.
AUTH_CLIENTS="$SMTP_SERVERS"

##############################################################################
# Outgoing AUTH
#
# Note: It is safe to permit this except that it may be used by local
# attackers to gain information about external hosts.
#
# Open: tcp(ack)/1024-4999,61000-65096

SERVICES="$SERVICES oauth"

# List of AUTH servers to which this network may connect.
# Blank means all hosts.
# AUTH_SERVERS=""

##############################################################################
# Incoming NOTES
#
# Note: You only need this if external Lotus Notes servers connect to
# internal Lotus Notes servers.
#
# Open: tcp/1352

# SERVICES="$SERVICES inotes"

# List of hosts which may connect to this host's NOTES server.
# Blank means all hosts.
# NOTES_CLIENTS=""

##############################################################################
# Outgoing NOTES
#
# Note: You only need this if internal Lotus Notes servers connect to
# external Lotus Notes servers.
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES onotes"

# List of NOTES servers to which this network may connect.
# Blank means all hosts.
# NOTES_SERVERS=""

##############################################################################
# Incoming SYSLOG
#
# Note: Only use this to collect syslog messages from a bastion host.
#
# Open: udp/514

# SERVICES="$SERVICES ilog"

# List of hosts which may connect to this host's SYSLOG server.
# Blank means no hosts.
# SYSLOG_CLIENTS=""

##############################################################################
# Outgoing SYSLOG
#
# Note: Only use this to send syslog messages from the bastion host to an
# internal host.
#
# Open: none

# SERVICES="$SERVICES olog"

# List of SYSLOG servers to which this network may connect.
# Blank means no hosts.
# SYSLOG_SERVERS=""

##############################################################################
# DHCP Server
#
# Note: You probably don't need this.
#
# Open: udp/67

# SERVICES="$SERVICES sdhcp"

# List of DHCP servers with which this network may communicate.
# Blank means all hosts.
# DHCP_CLIENTS=""

##############################################################################
# DHCP Client
#
# Note: Only allow DHCP traffic to/from trusted external DHCP servers.
#
# Open: udp/68

# SERVICES="$SERVICES cdhcp"

# List of DHCP servers with which this network may communicate.
# Blank means no hosts.
# DHCP_SERVERS=""

##############################################################################
# Incoming SNMP
#
# Note: You probably don't want to permit this across a firewall.
# If you do, only allow connections from trusted SNMP management stations.
#
# Open: udp/161

# SERVICES="$SERVICES isnmp"

# List of hosts which may connect to this host's SNMP server.
# Blank means no hosts.
# SNMP_CLIENTS=""

##############################################################################
# Outgoing SNMP
#
# Note: You probably don't want to permit this across a firewall.
# If you do, only allow connections to trusted SNMP network devices.
#
# Open: udp/1024-4999,61000-65096

# SERVICES="$SERVICES osnmp"

# List of SNMP servers to which this network may connect.
# Blank means no hosts.
# SNMP_SERVERS=""

##############################################################################
# Incoming SNMP TRAP
#
# Note: You probably don't want to permit this across a firewall.
# If you do, only allow connections from trusted SNMP management stations.
#
# Open: 162

# SERVICES="$SERVICES isnmpt"

# List of hosts which may connect to this host's SNMP trap server.
# Blank means no hosts.
# SNMP_TRAP_CLIENTS=""

##############################################################################
# Outgoing SNMP TRAP
#
# Note: You probably don't want to permit this across a firewall.
# If you do, only allow connections to trusted SNMP network devices.
#
# Open: udp/1024-4999,61000-65096

# SERVICES="$SERVICES osnmpt"

# List of SNMP trap servers to which this network may connect.
# Blank means no hosts.
# SNMP_TRAP_SERVERS=""

##############################################################################
# Incoming BGP
#
# Note: You probably don't want to permit this across a firewall.
# If you do, only allow connections from trusted BGP peers.
#
# Open: tcp/179

# SERVICES="$SERVICES ibgp"

# List of routers which may connect to this host's BGP server.
# Blank means no routers.
# BGP_CLIENTS=""

##############################################################################
# Outgoing BGP
#
# Note: You probably don't want to permit this across a firewall.
# If you do, only allow connections to trusted BGP peers.
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES obgp"

# List of BGP routers to which this router may connect.
# Blank means no routers.
# BGP_SERVERS=""

##############################################################################
# OSPF
#
# Note: You must have ospf(89) in /etc/protocols to use this.
#
# Open: ospf

# SERVICES="$SERVICES ospf"

# List of routers with which this host's OSPF server communicates.
# Blank means no routers.
# OSPF_ROUTERS=""

##############################################################################
# Incoming RIP
#
# Note: You probably don't want to permit this across a firewall.
#
# Open: udp/520

# SERVICES="$SERVICES irip"

# List of hosts which may connect to this host's RIP server.
# Blank means no hosts.
# RIP_CLIENTS=""

##############################################################################
# Outgoing RIP
#
# Note: You probably don't want to permit this across a firewall.
#
# Open: udp/1024-4999,61000-65096

# SERVICES="$SERVICES orip"

# List of RIP servers to which this network may connect.
# Blank means no hosts.
# RIP_SERVERS=""

##############################################################################
# Incoming KERBEROS
#
# Open: tcp/88,543-544,749

# SERVICES="$SERVICES ikerb"

# List of hosts which may connect to this host's KERBEROS server.
# Blank means all hosts.
# KERBEROS_CLIENTS=""

##############################################################################
# Outgoing KERBEROS
#
# Open: tcp(ack)/1024-4999,61000-65096

# SERVICES="$SERVICES okerb"

# List of KERBEROS servers to which this network may connect.
# Blank means all hosts.
# KERBEROS_SERVERS=""

##############################################################################
# Incoming PPTP
#
# Note: You must have pptp(47) in /etc/protocols to use this.
# Warning: Some iMplementationS of PPTP are completely insecure, use IPSEC.
#
# Open: tcp/1723 pptp

# SERVICES="$SERVICES ipptp"

# List of hosts which may make PPTP connections to this host.
# Blank means all hosts.
# PPTP_CLIENTS=""

##############################################################################
# Outgoing PPTP
#
# Note: You must have pptp(47) in /etc/protocols to use this.
# Warning: Some iMplementationS of PPTP are completely insecure, use IPSEC.
#
# Open: tcp(ack)/1024-4999,61000-65096 pptp

# SERVICES="$SERVICES opptp"

# List of PPTP servers to which this network may connect.
# Blank means all hosts.
# PPTP_SERVERS=""

##############################################################################
# Incoming IPSEC
#
# Note: You must have esp(50) and ah(51) in /etc/protocols to use this.
#
# Open: udp/500 esp ah

# SERVICES="$SERVICES iipsec"

# List of hosts which may make IPSEC connections to this host.
# Blank means all hosts.
# IPSEC_CLIENTS=""

##############################################################################
# Outgoing IPSEC
#
# Note: You must have esp(50) and ah(51) in /etc/protocols to use this.
#
# Open: udp/500 esp ah

# SERVICES="$SERVICES oipsec"

# List of IPSEC servers to which this network may connect.
# Blank means all hosts.
# IPSEC_SERVERS=""

##############################################################################
# Incoming PING
#
# Note: Only permit incoming pings from external hosts that have a reason to
# be pinging this host (e.g. your ISP).
#
# Open: icmp/echo-request

# SERVICES="$SERVICES iping"

# List of hosts which may ping this network.
# Blank means no hosts.
# PING_CLIENTS=""

##############################################################################
# Outgoing PING
#
# Note: This can be used by local attackers to flood external hosts but it
# is very useful. You can restrict outgoing PING to specific hosts if you
# want.
#
# Open: icmp/echo-reply

SERVICES="$SERVICES oping"

# List of hosts that this network may ping.
# Blank means all hosts.
# PING_SERVERS=""

##############################################################################
# Incoming TRACEROUTE
#
# Note: Only permit incoming traceroute from external hosts that have a
# reason to be tracing this network (e.g. your ISP). You can also limit
# which udp ports may be used for incoming traceroute  by prior arrangement
# with those wishing to trace your network (recommended).
#
# Open: udp/33434-33523

# SERVICES="$SERVICES itrace"

# List of hosts which may trace this network.
# This range can be tightened by prior agreement with those clients
# that have a need to trace your network.
# Blank means no hosts.
# TRACEROUTE_CLIENTS=""

# Range of udp ports that may be used by an incoming traceroute.
# ITRACEROUTE_SRC_PORTS="32769:65535"
# ITRACEROUTE_DST_PORTS="33434:33523"

##############################################################################
# Outgoing TRACEROUTE
#
# Note: This can be used by local attackers to gather information about
# external hosts but it is very useful. You can restrict outgoing TRACEROUTE
# to specific hosts if you want.
#
# Open: icmp/time-exceeded,destination-unreachable

SERVICES="$SERVICES otrace"

# List of hosts that this network may trace.
# Blank means all hosts.
# TRACEROUTE_SERVERS=""

# Range of udp ports that may be used by an outgoing traceroute.
# OTRACEROUTE_SRC_PORTS="32769:65535"
# OTRACEROUTE_DST_PORTS="33434:33523"

##############################################################################
# Other ICMP packets
#
# Note: The default icmp rules allow incoming destination-unreachable and
# outgoing fragmentation-needed, incoming anad outgoing source-quench,
# incoming and outgoing time-exceeded and incoming and outgoing
# parameter-problem. There's probably no reason to change this.
#
# Open: destination-unreachable, source-quench, time-exceeded, parameter-problem

# List of incoming icmp packet types to accept.
# OTHER_INCOMING_ICMP="3 4 11 12"

# List of outgoing icmp packet types to accept.
# OTHER_OUTGOING_ICMP="fragmentation-needed 4 11 12"

##############################################################################
# Packet Fragments
#
# Note: Fragments are denied/rejected iff $IPV4_FRAGMENT_PROTECT != "no".
#

##############################################################################
# Other TCP Services
#
# Note: This only works for applications with a simple, single-connection
# application protocol. Also, it can't be restricted to certain external
# servers or clients. All external hosts will be allowed to engage in these
# services so it should only be used for safe applications.
#
# Open (incoming): whatever you add
# Open (outgoing): tcp(ack)/1024-4999,61000-65096

# List of ports on this host that any external host can connect to.
# Blank means no other services.
# OTHER_INCOMING_TCP_SERVICES=""

# List of ports on any host that this network may connect to.
# Blank means no other services.
# OTHER_OUTGOING_TCP_SERVICES=""

##############################################################################
# No Log
#
# After you've set up your firewall, you may find regular, harmless packets
# being blocked and logged (e.g. netbios broadcasts). If you don't want them
# to be logged, you can add port numbers and protocol names to these variables
# and they will be blocked but not logged.
#

# Incoming and outgoing udp and tcp destination ports to block without
# logging. Blank means no ports are blocked without logging. i.e. all
# blocked packets are logged.

# INOLOG_UDP_PORTS=""
# ONOLOG_UDP_PORTS=""
# INOLOG_TCP_PORTS=""
# ONOLOG_TCP_PORTS=""

# Incoming and outging packets for other protocols to block without
# logging. Blank means no other protocols are blocked without logging.
# i.e. all blocked packets are logged.

# INOLOG_PROTO=""
# ONOLOG_PROTO=""

# vim:set filetype=sh:
