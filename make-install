#!/bin/sh
#
# firewall - http://fwup.org/
#
# Copyright (C) 1999-2002 raf <raf@raf.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# or visit http://www.gnu.org/copyleft/gpl.html
#

# make-install - Install the firewall scripts (without make)
#
# 20020626 raf <raf@raf.org>

[ -z "$STOP_LEVELS" ] && STOP_LEVELS="0 1 6"     # halt, single user, reboot
[ -z "$START_LEVELS" ] && START_LEVELS="2 3 4 5" # every other runlevel
[ -z "$START_TIME" ] && START_TIME="00"          # before network comes up
[ -z "$STOP_TIME" ] && STOP_TIME="99"            # after network goes down

. firewall.policy || exit 1
[ -d $root/usr/local/sbin ] || mkdir $root/usr/local/sbin || exit 1
install -m 744 fwup $root/usr/local/sbin || exit 1
install -m 744 fwdown $root/usr/local/sbin || exit 1
create() { if [ ! -f $1 ]; then echo '#!/bin/sh' > $1; echo >> $1; chmod u+x $1; fi; }
reload() { create $1; grep -q '/firewall reload' $1 || echo "[ -x $loc/firewall ] && $loc/firewall reload" | sed -e 's/provide-previous-regular-expression//' -e "s/$root//g" >> $1; }
script() { grep -q "^script.\*$2\$" $1 || echo "script $3" | sed -e 's/provide-previous-regular-expression//' -e "s/$root//g" >> $1; }
links() { for rc in $1; do [ -x $2/rc$rc.d/${3}firewall ] || ln -s ../init.d/firewall $2/rc$rc.d/${3}firewall 2>/dev/null; done; }
initd() { install -m 755 firewall $loc && links "$START_LEVELS" $1 S$START_TIME && links "$STOP_LEVELS" $1 K$STOP_TIME; }
dynamic() { if [ -z "$UNTRUSTED_ADDRESSES" ]; then ppp; dhcp; fi; }
rclocal() { install -m 755 firewall $loc && reload $1/rc.local; }
ppp() { if [ -d $root/etc/ppp ]; then if [ -d $root/etc/ppp/ip-up.d -a -d $root/etc/ppp/ip-down.d ]; then reload $root/etc/ppp/ip-up.d/00firewall; reload $root/etc/ppp/ip-down.d/00firewall; else reload $root/etc/ppp/ip-up.local; reload $root/etc/ppp/ip-down.local; fi; fi; }
dhcp() { if [ -d $root/etc/dhcpc ]; then for iface in $UNTRUSTED_INTERFACES; do reload $root/etc/dhcpc/dhcpcd-$iface.exe; done; fi; if [ -f $root/etc/dhclient.conf ]; then reload $root/etc/dhclient-exit-hooks; fi; if [ -f $root/etc/pump.conf ]; then script $root/etc/pump.conf pump.firewall $root/etc/pump.firewall; reload $root/etc/pump.firewall; fi; }
if [ -d $root/etc/rc.d/init.d ]; then loc=$root/etc/rc.d/init.d; initd $root/etc/rc.d; dynamic
elif [ -d $root/etc/init.d ]; then loc=$root/etc/init.d; initd $root/etc; dynamic
elif [ -x $root/etc/rc.d/rc.local ]; then loc=$root/etc; rclocal $root/etc/rc.d; dynamic
elif [ -x $root/etc/rc.local ]; then loc=$root/etc; rclocal $root/etc; dynamic
else exit 1
fi
